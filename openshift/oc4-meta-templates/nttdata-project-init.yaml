apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: nttdata-project-init-oc4
message: |-
  This template will bless the following to init a basic NTT project with the following strategy:
    * bless the dev/test/prod default user with image-puller access in Tools
    * bless the Network Policies to allow egress, inter-project communication with tools as well as internal namespace pod comms.
  To run this template (replace LICENSE_PLACE with your desired ID):
  $ oc process -f nttdata-project-init.yaml -p LICENSE_PLATE=123456 | oc apply -f -
metadata:
  annotations:
    openshift.io/display-name: NTTData Project Init
    description: |-
      This is a template to init common compnents for all NTTData projects into OpenShift 4.
    tags: instant-app,nttdata
  name: nttdata-project-init
parameters:
  - displayName: Openshift Namespace License Plate (ex// pjztlm)
    name: LICENSE_PLATE
    required: true

objects:
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: DEV-default-image-puller
      namespace: "${LICENSE_PLATE}-tools"
    subjects:
      - kind: ServiceAccount
        name: default
        namespace: "${LICENSE_PLATE}-dev"
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: 'system:image-puller'

  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: TEST-default-image-puller
      namespace: "${LICENSE_PLATE}-tools"
    subjects:
      - kind: ServiceAccount
        name: default
        namespace: "${LICENSE_PLATE}-test"
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: 'system:image-puller'

  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: PROD-default-image-puller
      namespace: "${LICENSE_PLATE}-tools"
    subjects:
      - kind: ServiceAccount
        name: default
        namespace: "${LICENSE_PLATE}-prod"
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: 'system:image-puller'

  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: deny-by-default
      namespace: "${LICENSE_PLATE}-dev"
    spec:
      podSelector: {}
      ingress: []
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-from-openshift-ingress
      namespace: "${LICENSE_PLATE}-dev"
    spec:
      # This policy allows any pod with a route & service combination
      # to accept traffic from the OpenShift router pods. This is
      # required for things outside of OpenShift (like the Internet)
      # to reach the pods.
      ingress:
        - from:
            - namespaceSelector:
                matchLabels:
                  network.openshift.io/policy-group: ingress
      podSelector: {}
      policyTypes:
        - Ingress
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-all-internal
      namespace: "${LICENSE_PLATE}-dev"
    spec:
      # Allow all pods within the dev namespace to communicate with one another.
      ingress:
        - from:
            - namespaceSelector:
                matchLabels:
                  environment: dev
                  name: ${LICENSE_PLATE}
      podSelector: {}
      policyTypes:
        - Ingress

  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: deny-by-default
      namespace: "${LICENSE_PLATE}-test"
    spec:
      podSelector: {}
      ingress: []
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-from-openshift-ingress
      namespace: "${LICENSE_PLATE}-test"
    spec:
      # This policy allows any pod with a route & service combination
      # to accept traffic from the OpenShift router pods. This is
      # required for things outside of OpenShift (like the Internet)
      # to reach the pods.
      ingress:
        - from:
            - namespaceSelector:
                matchLabels:
                  network.openshift.io/policy-group: ingress
      podSelector: {}
      policyTypes:
        - Ingress
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-all-internal
      namespace: "${LICENSE_PLATE}-test"
    spec:
      # Allow all pods within the test namespace to communicate with one another.
      ingress:
        - from:
            - namespaceSelector:
                matchLabels:
                  environment: test
                  name: ${LICENSE_PLATE}
      podSelector: {}
      policyTypes:
        - Ingress

  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: deny-by-default
      namespace: "${LICENSE_PLATE}-prod"
    spec:
      podSelector: {}
      ingress: []
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-from-openshift-ingress
      namespace: "${LICENSE_PLATE}-prod"
    spec:
      # This policy allows any pod with a route & service combination
      # to accept traffic from the OpenShift router pods. This is
      # required for things outside of OpenShift (like the Internet)
      # to reach the pods.
      ingress:
        - from:
            - namespaceSelector:
                matchLabels:
                  network.openshift.io/policy-group: ingress
      podSelector: {}
      policyTypes:
        - Ingress
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-all-internal
      namespace: "${LICENSE_PLATE}-prod"
    spec:
      # Allow all pods within the dev namespace to communicate with one another.
      ingress:
        - from:
            - namespaceSelector:
                matchLabels:
                  environment: prod
                  name: ${LICENSE_PLATE}
      podSelector: {}
      policyTypes:
        - Ingress

  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: deny-by-default
      namespace: "${LICENSE_PLATE}-tools"
    spec:
      podSelector: {}
      ingress: []
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-from-openshift-ingress
      namespace: "${LICENSE_PLATE}-tools"
    spec:
      # This policy allows any pod with a route & service combination
      # to accept traffic from the OpenShift router pods. This is
      # required for things outside of OpenShift (like the Internet)
      # to reach the pods.
      ingress:
        - from:
            - namespaceSelector:
                matchLabels:
                  network.openshift.io/policy-group: ingress
      podSelector: {}
      policyTypes:
        - Ingress
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-all-internal
      namespace: "${LICENSE_PLATE}-tools"
    spec:
      # Allow all pods within the dev namespace to communicate with one another.
      ingress:
        - from:
            - namespaceSelector:
                matchLabels:
                  environment: tools
                  name: ${LICENSE_PLATE}
      podSelector: {}
      policyTypes:
        - Ingress
