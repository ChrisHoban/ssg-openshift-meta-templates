kind: Template
apiVersion: v1
metadata:
  name: meta-deployment-config-template
parameters:
  - name: appName
    displayName: Name
    description: A prefix appended to all objects
    required: true
  - name: TAG
    required: true
    value: dev
  - name: GIT_REPO
    required: true
    value: https://github.com/ChrisHoban/ssg-openshift-meta-templates.git
  - name: namespace
    required: true
  - name: container_port
    value: '8080'
  - name: cpu_request
    description: The minimum amount of CPU the container is guaranteed.
    value: '100m'
  - name: memory_request
    description: The minimum amount of memory the container is guaranteed.
    value: '256Mi'
  - name: cpu_limit
    description: The maximum amount of CPU the container is allowed to use when running.
    value: '250m'
  - name: memory_limit
    description: The maximum amount of memory the container is allowed to use when running.
    value: '1Gi'
  - name: replicas
    value: '2'
  - name: healthCheckRoute
    display: Health Check Route
    description: URL Path to Application Health Check End Point
    required: true
  - name: readinessCheckDelay
    display: Readiness Check Delay
    description: Deploy Config Readiness Check Time Delay in Seconds (Less than Liveness)
    required: true
  - name: livenessCheckDelay
    display: Liveness Check Delay
    description: Deploy Config Liveness Check Time Delay in Seconds (Greater than Readiness)
    required: true

objects:
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      annotations:
      creationTimestamp: null
      labels:
        app: ${appName}
      name: ${appName}
    spec:
      replicas: ${{replicas}}
      selector:
        io.kompose.service: ${appName}
      strategy:
        resources: {}
      template:
        metadata:
          creationTimestamp:
          labels:
            io.kompose.service: ${appName}
        spec:
          containers:
          - image: ''
            name: ${appName}
            ports:
            - containerPort: ${{container_port}}
            resources:
              requests:
                cpu: ${cpu_request}
                memory: ${memory_request}
              limits:
                cpu: ${cpu_limit}
                memory: ${memory_limit}
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: ${healthCheckRoute}
                  port: ${container_port}
                  scheme: HTTP
                initialDelaySeconds: ${readinessCheckDelay}
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 10
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: ${healthCheckRoute}
                  port: ${container_port}
                  scheme: HTTP
                initialDelaySeconds: ${livenessCheckDelay}
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 10
          restartPolicy: Always
      test: false
      triggers:
      - type: ConfigChange
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${appName}
          from:
            kind: ImageStreamTag
            name: ${appName}:${TAG}
            namespace: ${namespace}
        type: ImageChange
    status: {}
