apiVersion: v1
kind: Template
labels:
  template: cordyn-pipeline
message: |-
  A Jenkins server must be instantiated in this project to manage
  the Pipeline BuildConfig created by this template.  You will be able to log in to
  it using your OpenShift user credentials.
metadata:
  annotations:
    openshift.io/display-name: CorDyn Pipeline Template
    description: |-
      This is a template for OpenShift Jenkins Pipelines on Cornet Dynamics Project.
    iconClass: icon-jenkins
    tags: instant-app,jenkins
  name: cordyn-pipeline-template
parameters:
- description: The OpenShift Namespace prefix where the ImageStreams reside.
  displayName: Namespace Prefix (Prefix for each namespace ie prefix-tools, prefix-dev etc)
  name: namespacePrefix
  required: true
  value:
objects:
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      app: jenkins-slave-sonarqube-dotnet
    name: jenkins-slave-sonarqube-dotnet
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: 'jenkins-slave-sonarqube-dotnet:latest'
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: jenkins-slave-images-sonarqube/dotnet-core-global
      git:
        ref: master
        uri: 'https://github.com/Cingulara/openshift-templates.git'
      type: Git
    strategy:
      dockerStrategy:
        dockerfilePath: Dockerfile
        env:
          - name: GIT_SSL_NO_VERIFY
            value: 'true'
        from:
          kind: DockerImage
          name: 'docker.io/openshift/jenkins-slave-base-centos7:latest'
      type: Docker
    successfulBuildsHistoryLimit: 5
    triggers: []
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      app: jenkins-slave-sonarqube-dotnet
    name: jenkins-slave-sonarqube-dotnet
  spec:
    lookupPolicy:
      local: false
- apiVersion: v1
  data:
    sonar-dotnet: |-
      <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
        <inheritFrom></inheritFrom>
        <name>sonar-dotnet</name>
        <instanceCap>2147483647</instanceCap>
        <idleMinutes>0</idleMinutes>
        <label>sonar-dotnet</label>
        <serviceAccount>jenkins</serviceAccount>
        <nodeSelector></nodeSelector>
        <volumes/>
        <containers>
          <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
            <name>jnlp</name>
            <image>docker-registry.default.svc:5000/${namespacePrefix}-tools/jenkins-slave-sonarqube-dotnet</image>
            <privileged>false</privileged>
            <alwaysPullImage>false</alwaysPullImage>
            <workingDir>/tmp</workingDir>
            <command></command>
            <args>${computer.jnlpmac} ${computer.name}</args>
            <ttyEnabled>false</ttyEnabled>
            <resourceRequestCpu></resourceRequestCpu>
            <resourceRequestMemory></resourceRequestMemory>
            <resourceLimitCpu></resourceLimitCpu>
            <resourceLimitMemory></resourceLimitMemory>
            <envVars/>
          </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
        </containers>
        <envVars/>
        <annotations/>
        <imagePullSecrets/>
        <nodeProperties/>
      </org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
  kind: ConfigMap
  metadata:
    creationTimestamp: '2020-01-13T00:19:29Z'
    labels:
      role: jenkins-slave
    name: jenkins-agent-sonar-dotnet
